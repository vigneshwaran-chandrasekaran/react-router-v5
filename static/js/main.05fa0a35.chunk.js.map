{"version":3,"sources":["components/Navigation.js","components/Footer.js","shared/auth.js","components/Login.js","pages/Home.js","pages/About.js","pages/Contact.js","pages/Todo.js","pages/Todos.js","pages/Common.js","pages/Dashboard.js","pages/Topics.js","pages/NotFound.js","pages/Protected.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","Navbar","collapseOnSelect","expand","bg","variant","Brand","as","NavLink","to","Toggle","aria-controls","Collapse","id","Nav","className","Link","exact","NavDropdown","title","Item","Divider","Footer","AuthButton","withRouter","history","fakeAuth","isAuthenticated","onClick","signout","push","PrivateRoute","Component","component","rest","render","props","pathname","state","from","location","authenticate","cb","this","setTimeout","Login","redirectToReferrer","login","setState","Home","About","console","log","Contact","useState","name","setName","message","when","startsWith","value","onChange","e","target","placeholder","Todo","match","useEffect","fetchTodo","params","todo","setTodo","a","fetch","data","json","Todos","fetchItems","todos","setTodos","map","key","url","path","Common","Dashboard","place","Topics","Topic","topicId","NotFound","Protected","App","isAuthed","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.05fa0a35.chunk.js","sourcesContent":["import React from 'react'\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\n\n/**\n * import { Nav, Navbar, NavDropdown, MenuItem, Tabs, ButtonToolbar, Button,\nTable, ButtonGroup, Row, Col, Grid, Panel, FormGroup, FormControl} from 'react-bootstrap';\n */\n\nexport default function Navigation() {\n    return (\n        <div>\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"info\" variant=\"dark\">\n                <Navbar.Brand as={NavLink} to=\"/\">React-Bootstrap</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link exact as={NavLink} to='/'>Home</Nav.Link>\n                        <Nav.Link as={NavLink} to='/about'>About</Nav.Link>\n                        <Nav.Link as={NavLink} to='/todo'>Todo</Nav.Link>\n                        <Nav.Link as={NavLink} to='/common-one'>Array Route 1</Nav.Link>\n                        <Nav.Link as={NavLink} to='/common-two'>Array Route 2</Nav.Link>\n                        <Nav.Link as={NavLink} to='/topics'>Topics</Nav.Link>\n                        <Nav.Link as={NavLink} to='/dashboard'>Dashboard</Nav.Link>\n                        <NavDropdown title=\"Protected\" id=\"collasible-nav-dropdown\">\n                            <NavDropdown.Item exact as={NavLink} to=\"/protected\">Protected</NavDropdown.Item>\n                            <NavDropdown.Item as={NavLink} to=\"/private\">Private</NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item as={NavLink} to=\"/private/100\">Private/param</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                    <Nav>\n                        <Nav.Link as={NavLink} to=\"/contact\">Contact</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Footer() {\n    return (\n        <div className='text-center footer'>\n            https://github.com/vigneshwaran-chandrasekaran\n        </div>\n    )\n}\n","import React from 'react';\nimport {\n    Route,\n    Redirect,\n    withRouter\n} from 'react-router-dom';\n\nexport const AuthButton = withRouter(\n    ({ history }) =>\n        fakeAuth.isAuthenticated ? (\n            <p>\n                Welcome!{\" \"}\n                <button className='btn btn-danger'\n                    onClick={() => {\n                        fakeAuth.signout(() => history.push(\"/\"));\n                    }}\n                >\n                    Sign out\n                </button>\n            </p>\n        ) : (\n                <p className=\"bg-danger text-white\">You are not logged in.</p>\n            )\n);\n\nexport function PrivateRoute({ component: Component, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                fakeAuth.isAuthenticated ? (\n                    <Component {...props} />\n                ) : (\n                        <Redirect\n                            to={{\n                                pathname: \"/login\",\n                                state: {\n                                    from: props.location\n                                }\n                            }}\n                        />\n                    )\n            }\n        />\n    );\n}\n\n\nexport const fakeAuth = {\n    isAuthenticated: false,\n    authenticate(cb) {\n        this.isAuthenticated = true;\n        setTimeout(cb, 100); // fake async\n    },\n    signout(cb) {\n        this.isAuthenticated = false;\n        setTimeout(cb, 100);\n    }\n};","import React, { Component } from 'react'\nimport { fakeAuth } from '../shared/auth';\nimport { Redirect } from 'react-router-dom';\n\nexport default class Login extends Component {\n    state = { redirectToReferrer: false };\n\n    login = () => {\n        fakeAuth.authenticate(() => {\n            this.setState({ redirectToReferrer: true });\n        });\n    };\n\n    render() {\n        let { from } = this.props.location.state || { from: { pathname: \"/\" } };\n        let { redirectToReferrer } = this.state;\n\n        if (redirectToReferrer) return <Redirect to={from} />;\n\n        return (\n            <div>\n                <p>You must log in to view the page at {from.pathname}</p>\n                <button className='btn btn-success' onClick={this.login}>Log in</button>\n            </div>\n        );\n    }\n}\n","import React from 'react'\n\nexport default function Home() {\n    return (\n        <div>\n            <h1>Home page</h1>\n        </div>\n    )\n}\n","import React from 'react';\nimport Button from 'react-bootstrap/Button'\n\nexport default function About(props) {\n    function handleOnClick() {\n        console.log({ props });\n        props.history.push('/todo');\n    }\n\n    return (\n        <div>\n            <h1>About page</h1>\n            <Button\n                variant=\"primary\"\n                onClick={handleOnClick}>Click here to programmatic navigation to todo page</Button>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Prompt } from 'react-router'\n\nfunction Contact() {\n  const [name, setName] = useState('');\n\n  function handleOnChange(e) {\n    setName(e.target.value);\n    console.log(!name);\n    console.log(!!name);\n  }\n  return (\n    <div>\n      {/* this is multiple options available in Prompt,\n      we can use any one according for our need,\n      if we use multiple Prompt last one will be used\n      */}\n      <Prompt message=\"Are you sure you want to leave?\" />\n      <Prompt\n        when={!!name}\n        message=\"Are you sure you want to leave this page?\"\n      />\n      <Prompt\n        when={!!name}\n        message={(location) => `Are you sure you want to ${location.pathname}`}\n      />\n      <Prompt\n        message={location =>\n          location.pathname.startsWith(\"/dashboard\")\n            ? true\n            : `Are you sure you want to go to ${location.pathname}?`\n        }\n      />\n      <h1>Contact page</h1>\n      <p>This page is implemented <strong>Prompt</strong> concept</p>\n      <p>If you type anything in below textbox and try to navigate any other route(page) except Dashboard page,\n        the Prompt will invoke\n      </p>\n      <input\n        value={name}\n        onChange={handleOnChange}\n        placeholder='Name' />\n      <p>{name}</p>\n    </div>\n  )\n}\n\nexport default Contact;\n","import React, { useState, useEffect } from 'react';\n\nexport default function Todo({ match }) {\n\n    useEffect(() => {\n        console.log('Component did mount');\n    }, []);\n\n    useEffect(() => {\n        console.log('Id changes');\n        fetchTodo();\n    }, [match.params.id]);\n\n    useEffect(() => {\n        console.log('always call');\n    });\n\n    const [todo, setTodo] = useState([]);\n\n    const fetchTodo = async () => {\n\n        const data = await fetch(`https://jsonplaceholder.typicode.com/todos/${match.params.id}`);\n\n        const todo = await data.json();\n\n        setTodo(todo);\n    };\n\n    return (\n        <div>\n            <h1>Todo page</h1>\n            <p>{match.params.id} - {todo.id} - {todo.title}</p>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Todo from './Todo';\nimport { Route } from 'react-router-dom';\n\nexport default function Todos({ match }) {\n\n    useEffect(() => {\n        console.log({ match });\n        fetchItems();\n    }, []);\n\n    const [todos, setTodos] = useState([]);\n\n    const fetchItems = async () => {\n\n        const data = await fetch('https://jsonplaceholder.typicode.com/todos?_limit=5');\n\n        const todos = await data.json();\n\n        setTodos(todos);\n    };\n\n    return (\n        <div className=\"d-flex flex-row justify-content-between\">\n            <div>\n                <h1>Todos page</h1>\n                <hr />\n                {todos.map(({ id, title }) => (\n                    <div key={id}>\n                        <Link to={`${match.url}/${id}`}>{id} - {title}</Link>\n                    </div>\n                ))}\n                <hr />\n            </div>\n            <div>\n                <Route exact path={`${match.path}/:id`} component={Todo} />\n                <Route\n                    exact\n                    path={match.path}\n                    render={() => <h3>Please select a todo.</h3>}\n                />\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\n\nfunction Common() {\n  return (\n    <div>\n      <h1>Common page for multiple routes</h1>\n      <p>Array route 1</p>\n      <p>Array route 2</p>\n    </div>\n  )\n}\n\nexport default Common;\n","import React, { useEffect } from 'react';\n\nexport default function Dashboard(props) {\n\n    useEffect(() => {\n        console.log({ props });\n    }, []);\n\n    return (\n        <div>\n            Dashboard - {props.name} {props.place}\n        </div>\n    )\n}\n","import React from 'react';\nimport { Route, Link } from \"react-router-dom\";\n\nexport default function Topics({ match }) {\n    return (\n        <div>\n            <h2>Topics</h2>\n            <ul>\n                <li>\n                    <Link to={`${match.url}/rendering`}>Rendering with React</Link>\n                </li>\n                <li>\n                    <Link to={`${match.url}/components`}>Components</Link>\n                </li>\n                <li>\n                    <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n                </li>\n            </ul>\n\n            <Route path={`${match.path}/:topicId`} component={Topic} />\n            <Route\n                exact\n                path={match.path}\n                render={() => <h3>Please select a topic.</h3>}\n            />\n        </div>\n    )\n}\n\n\nfunction Topic({ match }) {\n    return (\n        <div>\n            <h3>{match.params.topicId}</h3>\n        </div>\n    );\n}\n","import React from 'react'\n\nexport default function NotFound() {\n    return (\n        <h1 className='text-center'>\n            404 Error\n        </h1>\n    )\n}\n","import React from 'react'\n\nexport default function Protected() {\n    return (\n        <div>\n            <h3>Protected</h3>\n        </div>\n    )\n}\n","import React from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from 'react-router-dom';\n\nimport Navigation from './components/Navigation';\nimport Footer from './components/Footer';\nimport Login from './components/Login';\n\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Contact from './pages/Contact';\nimport Todos from './pages/Todos';\nimport Common from './pages/Common';\nimport Dashboard from './pages/Dashboard';\nimport Topics from './pages/Topics';\nimport NotFound from './pages/NotFound';\nimport Protected from './pages/Protected';\nimport { AuthButton, PrivateRoute } from './shared/auth';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <AuthButton />\n      <div className=\"container\">\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/about' component={About} />\n          <Route path='/todo' component={Todos} />\n          <Route path='/topics' component={Topics} />\n          <Route path='/contact' component={Contact} />\n          {/* react router v5 feature array of routes */}\n          <Route path={[\"/common-one\", \"/common-two\"]} component={Common} />\n          {/* Pass default param to route */}\n          <Route\n            path='/dashboard'\n            render={(props) => <Dashboard {...props} isAuthed={true} name='vigneshwaran' place='chennai' />}\n          />\n          <Route path=\"/login\" component={Login} />\n          <PrivateRoute path=\"/protected\" component={Protected} />\n          <PrivateRoute path=\"/private/:id?\" component={Protected} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}