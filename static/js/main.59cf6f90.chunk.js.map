{"version":3,"sources":["components/Navigation.js","components/Footer.js","pages/Home.js","pages/About.js","pages/Contact.js","pages/Todos.js","pages/Todo.js","pages/Common.js","pages/Dashboard.js","pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","Navbar","collapseOnSelect","expand","bg","variant","Brand","as","NavLink","to","Toggle","aria-controls","Collapse","id","Nav","className","Link","exact","NavDropdown","title","Item","Divider","Footer","Home","About","props","onClick","console","log","history","push","Contact","Todos","useEffect","fetchItems","useState","todos","setTodos","a","fetch","data","json","map","todo","key","Todo","match","fetchTodo","setTodo","params","Common","Dashboard","name","place","NotFound","App","path","component","render","isAuthed","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59cf6f90.chunk.js","sourcesContent":["import React from 'react'\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport { Link, NavLink } from 'react-router-dom';\n\n/**\n * import { Nav, Navbar, NavDropdown, MenuItem, Tabs, ButtonToolbar, Button,\nTable, ButtonGroup, Row, Col, Grid, Panel, FormGroup, FormControl} from 'react-bootstrap';\n */\n\nexport default function Navigation() {\n    return (\n        <div>\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"info\" variant=\"dark\">\n                <Navbar.Brand as={NavLink} to=\"/\">React-Bootstrap</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link exact as={NavLink} to='/'>Home</Nav.Link>\n                        <Nav.Link as={NavLink} to='/about'>About</Nav.Link>\n                        <Nav.Link as={NavLink} to='/todo'>Todo</Nav.Link>\n                        <Nav.Link as={NavLink} to='/common-one'>Array Route 1</Nav.Link>\n                        <Nav.Link as={NavLink} to='/common-two'>Array Route 2</Nav.Link>\n                        <Nav.Link as={NavLink} to='/dashboard'>Dashboard</Nav.Link>\n                        <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n                            <NavDropdown.Item exact as={NavLink} to=\"/\">Home</NavDropdown.Item>\n                            <NavDropdown.Item as={NavLink} to=\"/about\">About</NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item as={NavLink} to=\"/contact\">Contact</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                    <Nav>\n                        <Nav.Link as={NavLink} to=\"/contact\">Contact</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Footer() {\n    return (\n        <div className='text-center footer'>\n            https://github.com/vigneshwaran-chandrasekaran\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Home() {\n    return (\n        <div>\n            <h1>Home page</h1>\n        </div>\n    )\n}\n","import React from 'react';\nimport Button from 'react-bootstrap/Button'\n\nexport default function About(props) {\n    function handleOnClick() {\n        console.log({ props });\n        props.history.push('/todo');\n    }\n\n    return (\n        <div>\n            <h1>About page</h1>\n            <Button variant=\"primary\" onClick={handleOnClick}>Programmatic navigation to todo page</Button>\n        </div>\n    )\n}\n","import React from 'react';\n\nfunction Contact() {\n  return (\n    <div>\n      <h1>Contact page</h1>\n    </div>\n  )\n}\n\nexport default Contact;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Todos() {\n\n    useEffect(() => {\n        fetchItems();\n    }, []);\n\n    const [todos, setTodos] = useState([]);\n\n    const fetchItems = async () => {\n\n        const data = await fetch('https://jsonplaceholder.typicode.com/todos?_limit=10');\n\n        const todos = await data.json();\n\n        console.log({ todos });\n        setTodos(todos);\n    };\n\n    return (\n        <div>\n            <h1>Todos page</h1>\n            {todos.map(todo => (\n                <p key={todo.id}>\n                    <Link to={`/todo/${todo.id}`}>{todo.id} - {todo.title}</Link>\n                </p>\n            ))}\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\n\nexport default function Todo({ match }) {\n\n    useEffect(() => {\n        fetchTodo();\n        console.log({ match });\n    }, []);\n\n    const [todo, setTodo] = useState([]);\n\n    const fetchTodo = async () => {\n\n        const data = await fetch(`https://jsonplaceholder.typicode.com/todos/${match.params.id}`);\n\n        const todo = await data.json();\n\n        console.log({ todo });\n\n        setTodo(todo);\n    };\n\n    return (\n        <div>\n            <h1>Todo page</h1>\n            <p>{todo.id} - {todo.title}</p>\n        </div>\n    )\n}\n","import React from 'react';\n\nfunction Common() {\n  return (\n    <div>\n      <h1>Common page for multiple routes</h1>\n      <p>Array route 1</p>\n      <p>Array route 2</p>\n    </div>\n  )\n}\n\nexport default Common;\n","import React, { useEffect } from 'react';\n\nexport default function Dashboard(props) {\n\n    useEffect(() => {\n        console.log({ props });\n    }, []);\n\n    return (\n        <div>\n            Dashboard - {props.name} {props.place}\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function NotFound() {\n    return (\n        <h1 className='text-center'>\n            404 Error\n        </h1>\n    )\n}\n","import React from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from 'react-router-dom';\n\nimport Navigation from './components/Navigation';\nimport Footer from './components/Footer';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Contact from './pages/Contact';\nimport Todos from './pages/Todos';\nimport Todo from './pages/Todo';\nimport Common from './pages/Common';\nimport Dashboard from './pages/Dashboard';\nimport NotFound from './pages/NotFound';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <div className=\"container\">\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/about' component={About} />\n          <Route path='/todo' exact component={Todos} />\n          <Route path='/todo/:id' component={Todo} />\n          <Route path='/contact' component={Contact} />\n          {/* react router v5 feature array of routes */}\n          <Route path={[\"/common-one\", \"/common-two\"]} component={Common} />\n          {/* Pass default param to route */}\n          <Route\n            path='/dashboard'\n            render={(props) => <Dashboard {...props} isAuthed={true} name='vigneshwaran' place='chennai' />}\n          />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}