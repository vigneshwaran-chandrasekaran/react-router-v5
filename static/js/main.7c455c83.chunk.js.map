{"version":3,"sources":["components/Navigation.js","components/Footer.js","shared/auth.js","components/Login.js","pages/Home.js","pages/About.js","pages/Contact.js","pages/Todo.js","pages/Todos.js","pages/Common.js","pages/Dashboard.js","pages/Topics.js","pages/NotFound.js","pages/Protected.js","pages/Redirect.js","pages/Items.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","Navbar","collapseOnSelect","expand","bg","variant","Brand","as","NavLink","to","Toggle","aria-controls","Collapse","id","Nav","className","Link","exact","NavDropdown","title","Item","Divider","Footer","AuthButton","withRouter","history","fakeAuth","isAuthenticated","onClick","signout","push","PrivateRoute","Component","component","rest","render","props","pathname","state","from","location","authenticate","cb","this","setTimeout","Login","redirectToReferrer","login","setState","Home","About","Button","console","log","Contact","useState","name","setName","message","when","startsWith","value","onChange","e","target","placeholder","Todo","match","useEffect","fetchTodo","params","todo","setTodo","a","fetch","data","json","Todos","fetchItems","todos","setTodos","map","key","url","path","Common","Dashboard","place","Topics","Topic","topicId","NotFound","Protected","RedirectPage","Items","urlParams","qs","parse","search","ignoreQueryPrefix","userName","category","onSubmit","event","preventDefault","type","cat","App","isAuthed","Redirect","children","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c455c83.chunk.js","sourcesContent":["import React from \"react\";\nimport { Nav, Navbar, NavDropdown } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\n\n/**\n * import { Nav, Navbar, NavDropdown, MenuItem, Tabs, ButtonToolbar, Button,\nTable, ButtonGroup, Row, Col, Grid, Panel, FormGroup, FormControl} from 'react-bootstrap';\n */\n\nexport default function Navigation() {\n  return (\n    <div>\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"info\" variant=\"dark\">\n        <Navbar.Brand as={NavLink} to=\"/\">\n          React Router V5\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link exact as={NavLink} to=\"/\">\n              Home\n            </Nav.Link>\n            <Nav.Link as={NavLink} to=\"/about\">\n              About\n            </Nav.Link>\n            <Nav.Link as={NavLink} to=\"/todo\">\n              Todo\n            </Nav.Link>\n            <Nav.Link as={NavLink} to=\"/common-one\">\n              Array Route 1\n            </Nav.Link>\n            <Nav.Link as={NavLink} to=\"/common-two\">\n              Array Route 2\n            </Nav.Link>\n            <Nav.Link as={NavLink} to=\"/topics\">\n              Topics\n            </Nav.Link>\n            <Nav.Link as={NavLink} to=\"/dashboard\">\n              Dashboard\n            </Nav.Link>\n            <Nav.Link as={NavLink} to=\"/redirect\">\n              Redirect\n            </Nav.Link>\n            <Nav.Link as={NavLink} to=\"/items\">\n              Items\n            </Nav.Link>\n            <NavDropdown title=\"Protected\" id=\"collasible-nav-dropdown\">\n              <NavDropdown.Item exact as={NavLink} to=\"/protected\">\n                Protected\n              </NavDropdown.Item>\n              <NavDropdown.Item as={NavLink} to=\"/private\">\n                Private\n              </NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item as={NavLink} to=\"/private/100\">\n                Private/param\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          <Nav>\n            <Nav.Link as={NavLink} to=\"/contact\">\n              Contact\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <div className=\"text-center footer\">\n      https://github.com/vigneshwaran-chandrasekaran\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\n\nexport const AuthButton = withRouter(({ history }) =>\n  fakeAuth.isAuthenticated ? (\n    <p>\n      Welcome!{\" \"}\n      <button\n        className=\"btn btn-danger\"\n        onClick={() => {\n          fakeAuth.signout(() => history.push(\"/\"));\n        }}\n      >\n        Log out\n      </button>\n    </p>\n  ) : (\n    <p className=\"bg-danger text-white\">\n      You are not logged in. Go to any one of protected route for login\n    </p>\n  )\n);\n\nexport function PrivateRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        fakeAuth.isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: {\n                from: props.location\n              }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport const fakeAuth = {\n  isAuthenticated: false,\n  authenticate(cb) {\n    this.isAuthenticated = true;\n    setTimeout(cb, 100); // fake async\n  },\n  signout(cb) {\n    this.isAuthenticated = false;\n    setTimeout(cb, 100);\n  }\n};\n","import React, { Component } from \"react\";\nimport { fakeAuth } from \"../shared/auth\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default class Login extends Component {\n  state = { redirectToReferrer: false };\n\n  login = () => {\n    fakeAuth.authenticate(() => {\n      this.setState({ redirectToReferrer: true });\n    });\n  };\n\n  render() {\n    let { from } = this.props.location.state || { from: { pathname: \"/\" } };\n    let { redirectToReferrer } = this.state;\n\n    if (redirectToReferrer) return <Redirect to={from} />;\n\n    return (\n      <div>\n        <p>You must log in to view the page at {from.pathname}</p>\n        <button className=\"btn btn-success\" onClick={this.login}>\n          Log in\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function Home() {\n  return (\n    <div>\n      <h1>Home page</h1>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function About(props) {\n  function handleOnClick() {\n    console.log({ props });\n    props.history.push(\"/todo\");\n  }\n\n  return (\n    <div>\n      <h1>About page</h1>\n      <Button variant=\"primary\" onClick={handleOnClick}>\n        Click here to programmatic navigation to todo page\n      </Button>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Prompt } from \"react-router\";\n\nfunction Contact() {\n  const [name, setName] = useState(\"\");\n\n  function handleOnChange(e) {\n    setName(e.target.value);\n    console.log(!name);\n    console.log(!!name);\n  }\n  return (\n    <div>\n      {/* this is multiple options available in Prompt,\n      we can use any one according for our need,\n      if we use multiple Prompt last one will be used\n      */}\n      <Prompt message=\"Are you sure you want to leave?\" />\n      <Prompt\n        when={!!name}\n        message=\"Are you sure you want to leave this page?\"\n      />\n      <Prompt\n        when={!!name}\n        message={location => `Are you sure you want to ${location.pathname}`}\n      />\n      <Prompt\n        message={location =>\n          location.pathname.startsWith(\"/dashboard\")\n            ? true\n            : `Are you sure you want to go to ${location.pathname}?`\n        }\n      />\n      <h1>Contact page</h1>\n      <p>\n        This page is implemented <strong>Prompt</strong> concept\n      </p>\n      <p>\n        If you type anything in below textbox and try to navigate any other\n        route(page) except Dashboard page, the Prompt will invoke\n      </p>\n      <input value={name} onChange={handleOnChange} placeholder=\"Name\" />\n      <p>{name}</p>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React, { useState, useEffect } from \"react\";\n\nexport default function Todo({ match }) {\n  useEffect(() => {\n    console.log(\"Component did mount\");\n  }, []);\n\n  useEffect(() => {\n    console.log(\"Id changes\");\n    fetchTodo();\n  }, [match.params.id]);\n\n  useEffect(() => {\n    console.log(\"always call\");\n  });\n\n  const [todo, setTodo] = useState([]);\n\n  const fetchTodo = async () => {\n    const data = await fetch(\n      `https://jsonplaceholder.typicode.com/todos/${match.params.id}`\n    );\n\n    const todo = await data.json();\n\n    setTodo(todo);\n  };\n\n  return (\n    <div>\n      <h1>Todo page</h1>\n      <p>\n        {match.params.id} - {todo.id} - {todo.title}\n      </p>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Todo from \"./Todo\";\nimport { Route } from \"react-router-dom\";\n\nexport default function Todos({ match }) {\n  useEffect(() => {\n    console.log({ match });\n    fetchItems();\n  }, []);\n\n  const [todos, setTodos] = useState([]);\n\n  const fetchItems = async () => {\n    const data = await fetch(\n      \"https://jsonplaceholder.typicode.com/todos?_limit=5\"\n    );\n\n    const todos = await data.json();\n\n    setTodos(todos);\n  };\n\n  return (\n    <div className=\"d-flex flex-row justify-content-between\">\n      <div>\n        <h1>Todos page</h1>\n        <hr />\n        {todos.map(({ id, title }) => (\n          <div key={id}>\n            <Link to={`${match.url}/${id}`}>\n              {id} - {title}\n            </Link>\n          </div>\n        ))}\n        <hr />\n      </div>\n      <div>\n        <Route exact path={`${match.path}/:id`} component={Todo} />\n        <Route\n          exact\n          path={match.path}\n          render={() => <h3>Please select a todo.</h3>}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nfunction Common() {\n  return (\n    <div>\n      <h1>Common page for multiple routes</h1>\n      <p>Array route 1</p>\n      <p>Array route 2</p>\n    </div>\n  );\n}\n\nexport default Common;\n","import React, { useEffect } from \"react\";\n\nexport default function Dashboard(props) {\n  useEffect(() => {\n    console.log({ props });\n  }, []);\n\n  return (\n    <div>\n      Dashboard - {props.name} {props.place}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Route, Link } from \"react-router-dom\";\n\nexport default function Topics({ match }) {\n  return (\n    <div>\n      <h2>Topics</h2>\n      <ul>\n        <li>\n          <Link to={`${match.url}/rendering`}>Rendering with React</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n        </li>\n      </ul>\n\n      <Route path={`${match.path}/:topicId`} component={Topic} />\n      <Route\n        exact\n        path={match.path}\n        render={() => <h3>Please select a topic.</h3>}\n      />\n    </div>\n  );\n}\n\nfunction Topic({ match }) {\n  return (\n    <div>\n      <h3>{match.params.topicId}</h3>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function NotFound() {\n  return <h1 className=\"text-center\">404 Error</h1>;\n}\n","import React from \"react\";\n\nexport default function Protected() {\n  return (\n    <div>\n      <h3>Protected</h3>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router\";\n\nexport default function RedirectPage() {\n  const [state, setState] = useState(0);\n\n  function handleOnClick() {\n    setState(state + 1);\n  }\n\n  return (\n    <div>\n      <p>\n        On fifth time button click page will direct to dashboard Page using\n        \"Redirect\"\n      </p>\n      {state >= 5 && <Redirect to=\"/dashboard\" />}\n      <button className=\"btn btn-warning\" onClick={handleOnClick}>\n        Click me {state}\n      </button>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport qs from \"qs\";\n\nexport default function Items(props) {\n  const [state, setState] = useState(\"\");\n\n  useEffect(() => {\n    console.log({ props });\n    const urlParams = qs.parse(props.location.search, {\n      ignoreQueryPrefix: true // will ignore the '?'\n    });\n    console.log({ urlParams });\n    if (urlParams.userName) {\n      setState(urlParams.userName);\n    }\n  }, []);\n\n  function handleChange(event) {\n    const data = event.target.value;\n    setState(data);\n    props.history.push({\n      search: `?userName=${data}`\n    });\n  }\n\n  function handleSubmit(event) {\n    console.log(\"handleSubmit\");\n    event.preventDefault();\n  }\n\n  return (\n    <div>\n      <p>Items ww {props.data ? props.data.category : \"\"}</p>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            name=\"userName\"\n            value={state}\n            onChange={handleChange}\n          />\n        </label>\n        <div>\n          <input className=\"btn btn-success\" type=\"submit\" value=\"Submit\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Navigation from \"./components/Navigation\";\nimport Footer from \"./components/Footer\";\nimport Login from \"./components/Login\";\n\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport Contact from \"./pages/Contact\";\nimport Todos from \"./pages/Todos\";\nimport Common from \"./pages/Common\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Topics from \"./pages/Topics\";\nimport NotFound from \"./pages/NotFound\";\nimport Protected from \"./pages/Protected\";\nimport Redirect from \"./pages/Redirect\";\nimport Items from \"./pages/Items\";\nimport { AuthButton, PrivateRoute } from \"./shared/auth\";\nimport \"./App.css\";\n\nconst cat = { category: \"food\" };\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <AuthButton />\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/todo\" component={Todos} />\n          <Route path=\"/topics\" component={Topics} />\n          <Route path=\"/contact\" component={Contact} />\n          {/* react router v5 feature array of routes */}\n          <Route path={[\"/common-one\", \"/common-two\"]} component={Common} />\n          {/* Pass default param to route */}\n          <Route\n            path=\"/dashboard\"\n            render={props => (\n              <Dashboard\n                {...props}\n                isAuthed={true}\n                name=\"vigneshwaran\"\n                place=\"chennai\"\n              />\n            )}\n          />\n          <Route path=\"/redirect\" component={Redirect} />\n          <Route path=\"/login\" component={Login} />\n          <PrivateRoute path=\"/protected\" component={Protected} />\n          <PrivateRoute path=\"/private/:id?\" component={Protected} />\n          <Route exact path=\"/items\" component={Items} />\n          <Route exact path=\"/items\" render={() => <div>List of Items</div>} />\n          <Route\n            exact\n            path=\"/items\"\n            render={props => <Items {...props} data={cat} />}\n          />\n          <Route children={props => <Items {...props} />} />\n          <Route children={() => <Items />} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}